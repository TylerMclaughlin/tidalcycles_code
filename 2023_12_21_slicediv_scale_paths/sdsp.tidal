:script "/Users/r_tyler/Music/ableton_songs/toolz.tidal"

:script "/Users/r_tyler/Music/ableton_songs/pigments_midi_map.tidal"

:script "/Users/r_tyler/Music/ableton_songs/breakz.tidal"


--#2000
--0_M,5_M,5_mm,5_hm,8_M,10_mm,10_M,0_mm,0_M,

do

 

let dp = "0 .. 14"

d1 $ cat [n (tScale "0 2 4 5 7 9 11" (dp |+ 0) ),
     n (tScale "0 2 4 5 7 9 10" (dp |+ 0) ),
     n (tScale "0 2 4 5 7 8 10" (dp |+ 0) ),
     n (tScale "0 1 4 5 7 8 10" (dp |+ 0) ),
     n (tScale "0 1 3 5 7 8 10" (dp |+ 0) ),
     n (tScale "0 1 3 5 7 9 10" (dp |+ 0) ),
     n (tScale "0 2 3 5 7 9 10" (dp |+ 0) ),
     n (tScale "0 2 3 5 7 9 11" (dp |+ 0) ),
     n (tScale "0 2 4 5 7 9 11" (dp |+ 0) )] # m 1


let sliceDiv4 posL num subdivWhat subdivBy s p = within' ((posL/subdivWhat), (posL + num)/subdivWhat) (_fast subdivBy . _slow (num) . (|- amp s )) p

let sliceDiv2 posL num subdivWhat subdivBy p = within' ((posL/subdivWhat), (posL + num)/subdivWhat) (_fast subdivBy . _slow (num) ) p

d2 $ sliceDiv4 1 3 24 5 0.2 $ (# amp 0.9) $ slow 2 $ void (fast 2 (segfunc 24 (range 0 11 sine)))  [ "0 1 4 7 10", "0 1 3 6 9"] # m 1

d2 $ sliceDiv4 1 3 12 5 0.3 $ (# amp 0.9) $ slow 2 $ void (fast 2 (segfunc 24 (range 0 13 sine))) ["0 1 3 4 6 7 10", "0 1 3 4 6 7 10" |+ 3] # m 2

d2 $ sliceDiv4 7 11 24 3 (-0.1) $
     sliceDiv4 1 3 12 5 0.2 $ (# amp 0.9) $ slow 2 $
     void (fast 2 (segfunc 24 (range 0 13 sine))) ["0 1 3 4 6 7 10", "0 1 3 4 6 7 10" |+ 3] # m 2

-- heavenly
d2 $ sliceDiv4 9 11 24 6 (0.4) $
     sliceDiv4 1 3 12 5 0.2 $ (# amp 0.9) $ slow 2 $ 
     void (fast 2 (segfunc 24 (range 0 13 sine))) ["0 3 5 7 10" |- 4, "0 3 5 7 10" |- 9] # m 2

d2 silence

d2 $ sliceDiv4 5 8 15 8 0.1 $
     sliceDiv4 0 5 15 9 0.1 $ (# amp 0.9) $ struct "t(15, 15)" $ void ("[0..14]" |+ "0@5 1@4 2@3 3@2 4 [5 6]" ) ["0 2 4 5 7 9 10",
               "0 2 4 5 7 8 10",
               "0 1 4 5 7 8 10",
               "0 1 3 5 7 8 10",
               "0 1 3 5 7 9 10",
               "0 2 3 5 7 9 10",
               "0 2 3 5 7 9 11",
               "0 2 4 5 7 9 11"] # m 2

d3 $ drumz $ stack [sliceDiv4 5 6 6 2 0.0 $ n "0 0 0 0 0 0"] # m 3

d3 $ drumz $ rizz 8 "0 0.02 0.01" $ stack [
                      --sliceDiv4 2 1 6 2 0.2 $ 
                      (# amp 0.5) $
                      n "0 0 0 0 0 <0 [0 ~ ~ 0] 0 ~>",
                      n "[~ ~ 4 ~]*6",
                      -- n "[~ 3 ~ 3]*6",
                      gas 1 "0.2" $ sliceDiv4 9 2 12 4 0.1 $ n "[<4 ~> 5 6]*4"
                    ] # m 4

do
  --let sp = "t(5,8,2) t(3,8,4) t(<4>,8)"
  let sp = "[t [<t ~> < t>] [t t] t]*3"
  d3 $ l 0.001 $ slow 2 $ drumz $ rizz 12 "0 0.01" $
     -- rizz 8 "0 0.02 0.01" $
     stack [
      slow 1 $ gas 1 "0.3 0.47 0.4" $
      struct (sp) $ n "1 0@11",
      gas 1 "0.05 0.1 0.07" $
      struct (inv sp)
         $ n "3"] # m 4

d3 silence

d4 $ r 0.002 $ drumz $ rizz 4 "0 0.02 0.01" $
   stack [n "[~ <~ [~ 6]> 3 <~ [~ 6]>]*3"] # m 3

d4 silence

d5 $ drumz $ rizz 4 "0 0.02 0.01" $ mask "{t f t t}%4" $
   n "<<[~ 6 2 6]*6 [~ 6 2 6]*2> [~ 6 2 6]*3>" # m 4

d5 silence


d6 $ drumz $ r 0.001 $
     whenmod 8 7 (slow 3 . fast 2 . (|+ amp 0.1)) $
     sliceDiv4 9 11 24 6 (0.4) $
     sliceDiv4 1 3 12 5 0.2 $ (# amp 0.4) $  n " 4!24 "# m 4

d6 silence

d7 $ rizz 4 "0 0.02 0.01" $ struct "t t t(3,8)" $ slow 4 $ n "[-4@3 -9@5]!2 [-9@3 -2@5]!2" # m 7

d7 silence

d7 $ (# legato "1") $
     struct ("t!12") $  n ((slow "1 2 4 2" $ "0 12 12  0") |+ "<[-4@3 -9@5]!2 [-9@3 -2@5]!2>") # m 7

d7 $ sliceDiv4 9 11 24 6 (0.4) $
     sliceDiv4 1 3 12 5 0.2 $ (# amp 0.9) $ slow 2 $ 
     void (fast 2 (segfunc 24 (range 0 13 sine))) ["-12 3 5 7 10" |- 16, "-12 3 5 7 10" |- 21] # m 7

d9 $ (|- n 24) $ gas 6 "0.5 0.2 0.4 0.14" $ slow 1 $ n "0..23"# m 9

b14 = "0 1 1 2 3 4 5 6 2 0 5 7 4 6 5 5 0 1 1 2 3 4 5 6 2 0 5 7 4 6 5 5 0 1 1 2 3 4 5 6 2 0 5 7 4 6 5 5 ""0 1 1 2 3 4 5 6 2 0 5 7 4 6 5 5"	

b14 = "0 1 1 2 3 4 5 6 2 0 5 7 4 6 5 5 0 1 1 2 3 4 5 6 2 0 5 7 4 6 5 5 0 1 1 2 3 4 5 6 2 0 5 7 4 6 5 5"

d9 $ (|- n 24) $ (|+ n "<0!2 8 4>") $
    gas 6 "0.5 <0.2 0.21 0.213> <0.4 0.42> <0.14 0.12 0.13 0.14>" $
    mask (slow 2 $ "t@20 ~") $
    every 5 (bite 4 "1 1 1 1") $
    -- bite 4 "2 2 5 5" $
    -- bite 4 "1 2 3 3 3 4 2 7" $
    every 4 (sliceDiv4 9 11 24 6 (0.4)) $
    -- sliceDiv4 1 3 12 5 0.2 $ (# amp 0.9) $ slow 2 $ 
    slow 2 $
    every 7 (bite 4 "3 3 2 7") $
    stack
    [n b14 # m 10]

d9 silence

d10 silence

d10 $ (|- n 24) $
    gas 6 "0.5 <0.2 0.21 0.213> <0.4 0.42> <0.14 0.12 0.13 0.14>" $
    -- mask (slow 2 $ "t@20 ~") $
    -- every 5 (bite 4 "1 1 1 1") $
    -- bite 4 "2 2 5 5" $
    -- bite 4 "1 2 3 3 3 4 2 7" $
    every 4 (sliceDiv4 9 11 24 6 (0.2)) $
    -- sliceDiv4 1 3 12 5 0.2 $ (# amp 0.9) $ slow 2 $ 
    slow 2 $
     every 7 (bite 4 "3 3 2 7") $
    stack [n (b14 |* 4) # m 4, n "<-4 -9 -11 -6>" # m 7 ]
