
let zephyr z_edo scale1 p1 r2 p2 r3 p3 = n (tScale' z_edo scale1 $
     p1 |+ (slow r2  p2) |+ (slow r3 p3)) 

d1 $ sliceDiv 3 4 4 5 $ zephyr 21 "0 4 5 8 10 15 16" "5 0 2 4 6 5 3 1 -1" 4 "0 0 2 0" 8 "3 5" # m 1

do
 d2 $ (|- n 3 ) $ gas 8 "0.4 0.6" $
     sliceDiv 3 4 4 3 $ zephyr 21 "0 2 7 9 11 12 16"
      "5 ~ 2 4 6 5 3 1 -1" 4 "0 0 2 0" 8 "3 5" # m 2
 d1 $ (|- n 3 ) $ slow 2 $
      sliceDiv 3 4 16 5 $ fast 2 $
      sliceDiv 3 4 4 3 $ zephyr 21 "0 2 7 9 11 12 16"
      "~ 0 1 4 7 5 4 1 -1" 4 "0 1 2 0" 8 "2 3" # m 3
 d3 $ (|- n 3 ) $ sliceDiv 3 4 4 3 $
      zephyr 21 "0 [2 7] 2 9 11 12 16"
      "[3 0 ~ 4 7 5 4 1 -1]/2" 4 ("0 1 2 0" |- 4)  8 "2" # m 4


do
 d1 $ zephyr 21 "0 5 6 9 14 15 16" "3 5 7  4 2 8  1 3 5  3 4 ~" 3 "0 1 2" 6 "0 1 2" # m 2
 d2 $ ((1/12) <~) $ zephyr 21 "0 5 6 9 14 15 16" "3 5 7  4 2 8  ~ 3 5  3 4 5" 3 "0 -1 -2" 6 "0 1 2" # m 3
 d3 $ ((1/12) ~>) $ zephyr 21 "0 5 6 9 14 15 16" "3 5 7 ~ 2 8  1 3 5  3 4 5" 3 "0 -1 0 1" 6 "0 1 2" # m 4


do
 d1 $ zephyr 21 "0 5 6 8 11 14 15" "0 1 2 3 4 ~ 7 6 [5 3] 4 3" 4 "0 3" 2 "0 7" # m 2
 d2 $ zephyr 21 "0 5 6 8 11 14 15" "0 1 [2 4] 3 4 ~ 7 [6 5] [6] [5 4] 3" 3 "0 3" 5 "0 7" # m 3
 d3 $ zephyr 21 "0 5 6 8 11 14 15" "0 1 2  3 [2 4] ~ 7 6 5  4 [3 1]" 4 "1 2 2 1" 5 "0 7" # m 4


do 
 let zephyrs p r1 p2 r2 p3 = zephyr 21 "0 2 4 5 8 10 12 13" p r1 p2 r2 p3
 d1 $ stack [ zephyrs "~ 2 4 [2 3 4]  4 3 4 [1 2]" 1 "2 4" 4 "0 3" # m 2,
             zephyrs "0 2 [4 2 3 4]  ~ ~ 3 4 [1 2]" 2 "3 5" 5 "1 1" # m 3,
             zephyrs "4 1 [1 8] ~ 3 1 1 ~" 2 "-4 -5" 5 "1 1" # m 4]


do 
 let zephyrs p r1 p2 r2 p3 = zephyr 21 "0 2 3 4 7 9 12 16" p r1 p2 r2 p3
 d1 $ stack [ zephyrs "0 1 2 3 4 ~ ~ ~ ~ ~" 1 "2 4 ~" 2 "0 3" # m 2,
             zephyrs "~ ~ ~ ~ ~ 5 6 7 8 9"   2 "~ 3 5" 5 "1 1" # m 3,
             zephyrs "4 1 [1 8] ~ 3 1 1 ~" 2 "-4 -5" 5 "1 1" # m 4]



do 
 let zephyrs p r1 p2 r2 p3 = zephyr 21 "0 2 3 4 7 9 12 16" p r1 p2 r2 p3
 d1 $ stack [ zephyrs "[0 2 4 6 8](3,8)" 1 "2 4 ~" 2 "0 3" # m 2,
             zephyrs " 2 (3,8)" 1 "2 4 ~" 2 "0 3" # m 2,
             zephyrs " 4 (3,8)" 1 "2 4 ~" 2 "0 3" # m 3,
             zephyrs "3 3 3 1 -1 -3"  2 "6 -6 " 5 "1 1" # m 4]


do
  let zephyrs p r1 p2 r2 p3 = zephyr 21 "0 4 6 9 13 18" p r1 p2 r2 p3 
      transp ="[0 6 0 -5]/4" 
  d1 $ (|+ n transp) $ 
        slow 2 $ sliceDiv 5 9 17 3 $ fast 2 $ stack [
               zephyrs ("0 .. 17" |-  3) 4 "-2..-3" 8 "3 .. 4" # m 2,
               zephyrs ("0 .. 16" |-  1) 4 "-5 -3 2 1" 8 "3 .. -4" # m 3,
               zephyrs ("0 .. 14" |-  1) 4 "-5 -3 2 1" 8 "3 .. -4" # m 4]
  d2 $ (0.125 <~) $ mask "[t f t t]/4"$ (|+ n transp) $ zephyrs "[0, 2,  4, 5]" 4 "<-5 0> -3 2 1" 1 "0" # m 1


-- crazier 8 bit arp
do
  let zephyrs p r1 p2 r2 p3 = zephyr 21 "0 4 6 9 13  18" p r1 p2 r2 p3 
      transp ="[0 6 0 -5]/4" 
  d1 $ (|- n "[8 10 6 14]/3") $ stack [
        zephyrs "17 15 13 11 12 10 8 6  14 12 10 8 15 13 11 9"
        4 "[0 5]" 8 "[0 -3]" # m 2,
        zephyrs "17 <15 [13 15]> 13 11 12 10 8 6  14 12 10 8 15 13 11 9"
        4 "[0 5]" 8 ("[0 -3]" -| "1 2 3 4") # m 3 ]    
  d2 silence


do
  let zephyrs p r1 p2 r2 p3 = zephyr 21 "0 4 6 9 13  16 18" p r1 p2 r2 p3 
  d1 $  stack [ fast 2 $ zephyrs ("<[3 5 7 ~] [3 5 7] [3 ~ 5 7] [3 5 7 5] >" |-            "[0 1 2 3]/4") 6 "0 2 4" 8 "2 4" # m 2,
                (|- n 21) $ fast 2 $ zephyrs ("<[3 ~ 7 ~] [3 ~ 7] [3 ~ ~ 7] [3 ~ 7 5] >" |+
           "[0 1 2 3]/4") 6 "0 2 4" 8 "2 4" # m 3,
                (|- n 0) $ fast 2 $ zephyrs ("<[3 5 ~ ~] [3 5 ~] [~ 3 5 7] [~ ~ 7 5] >" |+
           "[0 1 2 3]/4") 6 "0 2 4 6" 8 ("3 6"|+ 2 ) # m "<4 [4,2]>"]


d1 $ (|+ n "[0 13 0 -13]*4") $ n (tScale' 21 "0 6 13  18" ((("0 2 4 2" |+| 
         "0 2 5 6 2") |-| "4 3 2" |-| "1 0 -1 0 1 -1") |- (slow 4 "2 4 3 2")))  # m 2

d1 $ (|+ n "[0 13 0 -13]/4") $ n (tScale' 21 "0 6 13  18" $ "6 [2 3 2] 4 2 3 5 2 3" |+| "4 6 2 2" )  # m 2
