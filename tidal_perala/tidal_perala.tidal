
setcps(1.18)

let mc = midichan
    m p = s "midi" # mc (p - 1) 
    m7 = "[0, 3, 8, 9]"
    m8 = "[1, 8, 6, 12]"
    m9 = "[0,2,3,6]"
    am9 = "[-5, 0, 6, 11, 17]"
    dm9 = "[3, 8, 14, 19, 25]"
    cM = "[0,6,11]"
    bm = "[-3,3,7]"
    am = "[-6,0,3]"

cps(130/60)

d1 $ (|- n 24) $ stack [ n "1 3 8 10" # m 1,
          n "~ 0 ~ 0 " # m 1,
          n "1 3 8 10" # m 2,
          n (parseBP_E $ m8 ++ "1 3 8 10") # m 3,
          n (parseBP_E $ m7 ++ " ~ " ++ m8) # m 4,
          n (parseBP_E $ m7 ++ "(3,4) ~ " ++ m8) # m 5]


d1 $ stack [
        (|- 24) $ stack [
            n "0 0 " # m 1,
            n "~ 6 ~ 6 " # m 1,
            n "~ 15(3, 8, 2)" # m 1 # amp "<0.2, 0.24>",
            n "15(<1 1 1 3>, 8, 4)" # m 1
        ],
         chew 4 "0*8" $ cat [n "[0, 6, 11]" # amp 0.2, n cM, chew 2 "4" $ n bm, n am9 ] # m 3,
        chew 4 "0*8" $ cat [n " ~ 6", n "[0, 6, 11]" # amp 0.2, chew 2 "4" $ " ~ 3 ~ <3 7>", n " ~ 0 3 11" # amp 0.2 ] # m 4,
        cat [n "3(<1 2 1 3>, 8, 4)", n "-5(<1 3 1 3>, 8, 4)"]  # m 2
]


d1 $ plyWith 2 (|- amp 0.2) $ stack [ 
    (|- n 24) $ stack [
        n " 0 <[0 6] [0,6]> " # m 1,
        n "~ 10(3, 8, 2)" # m 1 # amp "<0.2, 0.24>",
        n "15(<3 3 1 3>, 8, 4)" # m 1,
        n "18(<3 3 1 3>, 8, 5)" # m 1
    ],
    whenmod 8 7 (|+ n "<6 11 17 11>") $ cat [ n am9, n dm9] # m 3,
    --whenmod 8 7 (|+ n "<6 11 17 11>") $ cat [ n am9, n dm9] # m 5,
    whenmod 8 7 (|+ n "<6 11 17 11>") $ cat [n "-5(<1 3 1 3>, 8, 4)", n "3(<1 3 1 3>, 8, 4)"]  # m 2
]

hush


d1 $ pickF "{0@4 1@1 2@2 1@2}%8" [(|+ n 2), stut 4 0.5 (-1/32), (* speed 2)] $ 
 stack [
    (|- n 24) $ (|+ n 2) $ n "0 6 3 6" # m 1,
    (0.25 <~) $ (|- n 24) $ (|+ n 2) $ n "0 6 3 6" # m 2
]



hush

d3 $ ()





