:script "/Users/r_tyler/Music/ableton_songs/toolz.tidal"


do
 let tr = ("<1 2 3 4>/2" |- 2)
     sc p = (tScale "0 2 4 7 9 " p)
     d = 10.5/1000
     fs9 p = fastsoft' 0.9 p
 d1 $ (|- n 18) $
  slow 6 $
  (# legato "2.5") $ stack [
   r (8 |* d) $ fs9 "<9 8>" $
   n (sc ((fast 3 $ "12 ~ ") |+
   tr)) # m 1, 
   r (7 |* d) $ fs9 "<8 7>" $
   n (sc ((fast 4 $ "11 ~ ") |+
   tr)) # m 2,
   r (6 |* d) $ fs9 "<7 6>" $
   n (sc ((fast 5 $ "10 ~ ") |+
   tr )) # m 3,
   r (5 |* d) $ fs9 "<6 5>" $
   n (sc ((fast 6 $ "9 ~ ") |+
   tr )) # m 4, 
   r (4 |* d) $ fs9 "<5 4>" $
   n (sc ((fast 7 $ "7 ~ ") |+
   tr )) # m 5, 
   r (3 |* d) $ fs9 "<4 3>" $
   n (sc ((fast 8 $ "5 ~ ") |+
   tr )) # m 6, 
   r (2 |* d) $ fs9 "<3 2>" $
   n (sc ((fast 9 $ "2 ~ " ) |+
   tr)) # m 7, 
   r (1 |* d) $ fs9 "<2 1>" $
   n (sc ((fast 10 $ "-1 ~ ") |+
   tr)) # m 8 
   ]






14 2 7
18 3 6
16 4 4
20 5 4
12 6 2


sc

do
  let sc p = (tScale ("2 4 7 9 11 12" |- 4) p)
      p1 = "<0 -2 -4 -2>/2"
      p2 = "<0 2 4 2>/2"
      p3 = ("<0 2>" |+ "<0 3 3 0 >/2")
  d1 $ slow 4 $ stack [
   fastsoft' 0.9 2 $ n (sc ("~ 2 2 4 1 2 " |+ p1 |+ p3 )) # m 1,
   fastsoft' 0.9 3 $ n (sc ("~ 4 4 0 4 2" |- 4 |+ p2 |+ p3 )) # m 2,
   fastsoft' 0.9 4 $ n (sc ("{0 4 8 }%4" |- 8  |+ p1 |+ p3 )) # m 3,
   fastsoft' 0.9 5 $ n (sc ("~ 3 1 2" |+ 2 |+ p2 |+ p3  )) # m 4,
   fastsoft' 0.9 6 $ (sus 1 ("<0.75!2 0.25!2> <2 0.5> 0 0.25" |+ 0.5)) $ (# amp "0.5 0.1 0.5 0.5") $ n (sc ("0 0 ~ 2" |+ 8 |+ p3     )) # m 5, 
   fastsoft' 0.9 7 $ n (sc ( "[~ 14 [12 13]]*4" |+ p3)) # m 6
   ]

d5 $ drumz $ l (1/8) $ n "1 ~ ~ 1 0 ~ ~ 0" # m 7 

d6 $ drumz $ (r (segfunc 8 $ range 0.001 0.002 $ egg 1 4)) $ rizz 4 "0 0.005" $ gas 1 ("3 5 3 3 4 0.45 5 3" |/ 10) $ n "5!8" # m 7 

d7 $ drumz $ r 0.002 $ n "[~ <~ 2> <2!2 ~> ~]*2" # m 7 


   r (8 |* d) $ fs9 "<9 8>" $
   n (sc ((fast 3 $ "12 ~ ") |+



let polycule d dm fs fsp sc dp  =  r (d |* dm) $ fastsoft' fs fsp $ n (tScale sc (dp))  

do
 let dm1 = 30
     sc1 = "2 5 7 9 12"
     -- sc1 = "5 9 11 14"
     -- sc1 = "4 7 10 12"
     -- sc1 = "5 9 12 16"
 d1 $ (|+ n "7") $ fastsoft' 0.8 ("1 2 3 2" |/3) $ (|+ n "[0 -5 [-7!3 -5]@2]/4") $ stack [
     polycule 8 dm1 0.8 "5" sc1 ("[0 ]" |+ ("<0 1 2 3>/2" |* 2 |- 7 |- "<1 2 1 -1>/4")),
     polycule 5 dm1 0.8 "4" sc1 ("[ ~ 3]" |+ ("<0 1 2 3>/2" |* 2 |- 5 |- "<1 2 1 -1>/4")),
     polycule 5 dm1 0.85 "3" sc1 ("[ ~  1]" |+ ("<0 1 2 3>/2" |* 2 |- 3 |- "<1 2 1 -1>/4")),
     polycule 5 dm1 0.88 "7" sc1 ("[ ~ 1]" |+ ("<0 1 2 3>/2" |* 2 |- 1 |- "<1 2 1 -1>/4"))
     ] # m 1


do
  let sc p = tScale "3 6 8 10 13 17" p
  d1 $ fast 1 $ fast 15 $ stack [ (# amp 0.5) $ slow 15 $ struct "t(5,15)" $ nT "a" 5 (sc ("[0 1 -3 -2]" |+ 3)),
              (# amp 0.2) $ slow 17 $ struct "t(13,17)" $ nT "b" 13 (sc ("[0 1 -3 -2]" |- 5)),
              (# amp 0.3) $ slow 16 $ struct "t(7,16)" $ nT "c" 7 (sc ("[0 1 -3 -2]" |+ 5)),
              (# amp 0.28) $ slow 18 $ struct "t(9,18)" $ nT "d" 9 (sc ("[0 1 -3 -2]" |+ 7))
             ] # m 1
  
]

do
 let sc p = tScale "3 6 8 10 13 17" p
 d1 $ (|+ n "<0!7 6 0!7 6!2 0!7 6!3 0!7 6!2>") $
      fast 15 $ stack [ (# amp 0.5) $ slow 15 $ struct "t(6,15)" $ nT "a" 5 (sc ("[0 1 -3 -2]" |+ 3)),
       (# amp 0.2) $ slow 17 $ struct "t(6,17)" $ nT "b" 13 (sc ("[0 1 -3 -2]" |- 5)),
       (# amp 0.3) $ slow 16 $ struct "t(6,16)" $ nT "c" 7 (sc ("[0 1 -3 -2]" |+ 5)),
       (# amp 0.28) $ slow 18 $ struct "t(6,18)" $ nT "d" 9 (sc ("[0 1 -3 -2]" |+ 7))
      ] # m 1
